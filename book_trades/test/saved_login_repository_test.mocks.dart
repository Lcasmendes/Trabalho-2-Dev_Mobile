// Mocks generated by Mockito 5.4.5 from annotations
// in projeto2/test/saved_login_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:projeto2/repository/floor/login_try.dart' as _i4;
import 'package:projeto2/repository/floor/login_try_dao.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SavedLoginDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockSavedLoginDao extends _i1.Mock implements _i2.SavedLoginDao {
  MockSavedLoginDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> insert(_i4.SavedLogin? savedLogin) => (super.noSuchMethod(
        Invocation.method(
          #insert,
          [savedLogin],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.SavedLogin>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i3.Future<List<_i4.SavedLogin>>.value(<_i4.SavedLogin>[]),
      ) as _i3.Future<List<_i4.SavedLogin>>);

  @override
  _i3.Stream<List<_i4.SavedLogin>> getAllInStream() => (super.noSuchMethod(
        Invocation.method(
          #getAllInStream,
          [],
        ),
        returnValue: _i3.Stream<List<_i4.SavedLogin>>.empty(),
      ) as _i3.Stream<List<_i4.SavedLogin>>);

  @override
  _i3.Future<void> deleteAll() => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Stream<List<_i4.SavedLogin>?> getSavedLogin() => (super.noSuchMethod(
        Invocation.method(
          #getSavedLogin,
          [],
        ),
        returnValue: _i3.Stream<List<_i4.SavedLogin>?>.empty(),
      ) as _i3.Stream<List<_i4.SavedLogin>?>);

  @override
  _i3.Future<String?> getUserId() => (super.noSuchMethod(
        Invocation.method(
          #getUserId,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<_i4.SavedLogin?> getSaved() => (super.noSuchMethod(
        Invocation.method(
          #getSaved,
          [],
        ),
        returnValue: _i3.Future<_i4.SavedLogin?>.value(),
      ) as _i3.Future<_i4.SavedLogin?>);
}
